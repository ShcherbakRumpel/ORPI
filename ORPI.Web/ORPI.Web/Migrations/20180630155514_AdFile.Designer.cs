// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using ORPI.Web.DAL.Context;
using System;

namespace ORPI.Web.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20180630155514_AdFile")]
    partial class AdFile
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("ORPI.Web.DAL.Models.AdFile", b =>
                {
                    b.Property<string>("AdFileId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AdvertisingInEnglish");

                    b.Property<string>("AdvertisingInFrench");

                    b.Property<string>("AdvertisingPoster");

                    b.Property<string>("AgencyId");

                    b.Property<string>("AmountOfCommissionTTC");

                    b.Property<string>("AnnualFee");

                    b.Property<string>("AreaSurface");

                    b.Property<string>("BuildType");

                    b.Property<string>("City");

                    b.Property<string>("GIEId");

                    b.Property<string>("GeneralAvailabilityOfHousing");

                    b.Property<string>("IndefiniteJointOwnership");

                    b.Property<string>("InsuranceDeposit");

                    b.Property<string>("JointLease");

                    b.Property<string>("LandType");

                    b.Property<string>("LivingArea");

                    b.Property<string>("Null1");

                    b.Property<string>("Null100");

                    b.Property<string>("Null101");

                    b.Property<string>("Null102");

                    b.Property<string>("Null103");

                    b.Property<string>("Null104");

                    b.Property<string>("Null105");

                    b.Property<string>("Null106");

                    b.Property<string>("Null107");

                    b.Property<string>("Null108");

                    b.Property<string>("Null109");

                    b.Property<string>("Null110");

                    b.Property<string>("Null111");

                    b.Property<string>("Null112");

                    b.Property<string>("Null113");

                    b.Property<string>("Null114");

                    b.Property<string>("Null115");

                    b.Property<string>("Null116");

                    b.Property<string>("Null117");

                    b.Property<string>("Null118");

                    b.Property<string>("Null119");

                    b.Property<string>("Null120");

                    b.Property<string>("Null121");

                    b.Property<string>("Null122");

                    b.Property<string>("Null123");

                    b.Property<string>("Null124");

                    b.Property<string>("Null125");

                    b.Property<string>("Null126");

                    b.Property<string>("Null127");

                    b.Property<string>("Null2");

                    b.Property<string>("Null3");

                    b.Property<string>("Null4");

                    b.Property<string>("Null5");

                    b.Property<string>("NumberOfChamber");

                    b.Property<string>("NumberOfFloor");

                    b.Property<string>("NumberOfMandate");

                    b.Property<string>("NumberOfRooms");

                    b.Property<string>("Photo1");

                    b.Property<string>("Photo10");

                    b.Property<string>("Photo11");

                    b.Property<string>("Photo12");

                    b.Property<string>("Photo13");

                    b.Property<string>("Photo14");

                    b.Property<string>("Photo15");

                    b.Property<string>("Photo16");

                    b.Property<string>("Photo17");

                    b.Property<string>("Photo18");

                    b.Property<string>("Photo19");

                    b.Property<string>("Photo2");

                    b.Property<string>("Photo20");

                    b.Property<string>("Photo3");

                    b.Property<string>("Photo4");

                    b.Property<string>("Photo5");

                    b.Property<string>("Photo6");

                    b.Property<string>("Photo7");

                    b.Property<string>("Photo8");

                    b.Property<string>("Photo9");

                    b.Property<string>("PostalCode");

                    b.Property<string>("Price");

                    b.Property<string>("Rent");

                    b.Property<string>("RentOfFurniture");

                    b.Property<string>("RentTTC");

                    b.Property<string>("ShortAdvertisement");

                    b.Property<string>("Square");

                    b.Property<string>("Title");

                    b.Property<string>("TypeOfBuilding");

                    b.Property<string>("TypeOfMandate");

                    b.Property<string>("TypeOfOwnership");

                    b.Property<string>("VirtualPartnersURL");

                    b.HasKey("AdFileId");

                    b.HasIndex("AgencyId");

                    b.ToTable("AdFile");
                });

            modelBuilder.Entity("ORPI.Web.DAL.Models.Agency", b =>
                {
                    b.Property<string>("AgencyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address1");

                    b.Property<string>("Address2");

                    b.Property<string>("AgancyImage");

                    b.Property<string>("AgencyAddress");

                    b.Property<string>("AgencyName");

                    b.Property<string>("AgencyScheduleURL");

                    b.Property<string>("Capital");

                    b.Property<string>("City");

                    b.Property<string>("Civilite");

                    b.Property<string>("CommercialCourt");

                    b.Property<string>("Email");

                    b.Property<string>("Fax");

                    b.Property<string>("GIEId");

                    b.Property<string>("GuaranteeBody");

                    b.Property<string>("LegalForm");

                    b.Property<string>("LegalRepresentative");

                    b.Property<string>("Null01");

                    b.Property<string>("Null02");

                    b.Property<string>("Null03");

                    b.Property<string>("Null04");

                    b.Property<string>("Null06");

                    b.Property<string>("Null07");

                    b.Property<string>("Null08");

                    b.Property<string>("Null09");

                    b.Property<string>("Null10");

                    b.Property<string>("NumberRCSN");

                    b.Property<string>("OfficeAddress");

                    b.Property<string>("OpriId");

                    b.Property<string>("Phone");

                    b.Property<string>("PostalCode");

                    b.Property<string>("Prefecture");

                    b.Property<string>("PrefectureAddress");

                    b.Property<string>("ProfessionalCardNumber");

                    b.Property<string>("Raisonsosiale");

                    b.Property<string>("Siret");

                    b.Property<string>("VATRate");

                    b.Property<string>("WarrantySize");

                    b.Property<string>("WarrantyStatement");

                    b.Property<string>("Website");

                    b.HasKey("AgencyId");

                    b.ToTable("Agency");
                });

            modelBuilder.Entity("ORPI.Web.DAL.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<DateTime>("RegisterDate");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ORPI.Web.DAL.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ORPI.Web.DAL.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ORPI.Web.DAL.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ORPI.Web.DAL.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ORPI.Web.DAL.Models.AdFile", b =>
                {
                    b.HasOne("ORPI.Web.DAL.Models.Agency", "Agency")
                        .WithMany("AdFiles")
                        .HasForeignKey("AgencyId");
                });
#pragma warning restore 612, 618
        }
    }
}
